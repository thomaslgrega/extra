{"version":3,"sources":["components/Navbar.jsx","components/AccountItem.jsx","components/Summary.jsx","components/TransactionItem.jsx","components/Transactions.jsx","components/reports/DailyReports.jsx","components/reports/Reports.jsx","components/reports/WeeklyReports.jsx","components/reports/MonthlyReports.jsx","App.js","index.js"],"names":["Navbar","activeClassName","exact","to","AccountItem","account","institution","accountBalance","Summary","useState","transactions","JSON","parse","localStorage","getItem","stringify","total","forEach","transaction","amount","parseFloat","income","expense","balance","cashAccounts","setCashAccounts","creditAccounts","setCreditAccounts","bankAccounts","setBankAccounts","setInstitution","setAccountBalance","accountCategory","setAccountCategory","useEffect","setItem","onSubmit","e","preventDefault","oldAccounts","id","Math","floor","random","handleSubmit","required","type","placeholder","value","onChange","target","step","defaultValue","name","disabled","className","toFixed","map","key","TransactionItem","handleDelete","category","abs","date","description","onClick","Transactions","sort","a","b","setTransactions","setCategory","setAmount","Date","toLocaleDateString","split","month","day","year","length","setDate","setDescription","setAccount","setType","newTransactions","filter","clear","oldTransactions","min","getAccounts","i","categoryHeader","ascending","classList","contains","remove","add","sortCategory","amountHeader","sortAmount","dateHeader","sortDate","DailyReports","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","breakdown","toLowerCase","push","dailyBreakdown","totalExpenses","every","options","title","display","text","fontSize","legend","position","Reports","WeeklyReports","getWeek","dayOfWeek","getDay","week","referenceDate","moment","clone","subtract","format","join","fill","lineTension","borderColor","borderWidth","expenseForDay","populateData","includes","MonthlyReports","getMonth","numDays","slice","getDate","monthDays","toString","transactionMonth","transactionYear","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mJAGaA,EAAS,WACpB,OACE,6BACE,4BACE,kBAAC,IAAD,CAASC,gBAAgB,aAAaC,OAAK,EAACC,GAAG,YAA/C,WACA,kBAAC,IAAD,CAASF,gBAAgB,aAAaC,OAAK,EAACC,GAAG,iBAA/C,gBACA,kBAAC,IAAD,CAASF,gBAAgB,aAAaC,OAAK,EAACC,GAAG,WAA/C,c,mCCPKC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,6BACE,6BAAMA,EAAQC,aACd,6BAAMD,EAAQE,kBCHPC,EAAU,WAAO,IAAD,EACCC,oBAAS,WACnC,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAC3FC,EAAQ,EAOZ,OANAN,EAAaO,SAAQ,SAAAC,GACfA,EAAYC,OAAS,IACvBH,GAASI,WAAWF,EAAYC,YAI7BH,KAVkB,mBACpBK,EADoB,aAaGZ,oBAAS,WACrC,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAC3FC,EAAQ,EAOZ,OANAN,EAAaO,SAAQ,SAAAC,GACfA,EAAYC,OAAS,IACvBH,GAASI,WAAWF,EAAYC,YAI7BH,MAtBkB,mBAapBM,EAboB,aAyBGb,mBAASY,EAASC,IAzBrB,mBAyBpBC,EAzBoB,aA0Bad,mBAASE,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,OA1BhG,mBA0BpBS,EA1BoB,KA0BNC,EA1BM,OA2BiBhB,mBAASE,KAAKC,MAAMC,aAAaC,QAAQ,2BAA6BH,KAAKI,UAAU,MA3BtG,mBA2BpBW,EA3BoB,KA2BJC,EA3BI,OA4BalB,mBAASE,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,MA5BhG,mBA4BpBa,EA5BoB,KA4BNC,EA5BM,OA6BWpB,mBAAS,IA7BpB,mBA6BpBH,EA7BoB,KA6BPwB,EA7BO,OA8BiBrB,mBAAS,GA9B1B,mBA8BpBF,EA9BoB,KA8BJwB,EA9BI,OA+BmBtB,mBAAS,IA/B5B,mBA+BpBuB,EA/BoB,KA+BHC,EA/BG,KAiC3BC,qBAAU,WACRrB,aAAasB,QAAQ,uBAAwBxB,KAAKI,UAAUS,MAC3D,CAACA,IAEJU,qBAAU,WACRrB,aAAasB,QAAQ,yBAA0BxB,KAAKI,UAAUW,MAC7D,CAACA,IAEJQ,qBAAU,WACRrB,aAAasB,QAAQ,uBAAwBxB,KAAKI,UAAUa,MAC3D,CAACA,IAaJ,OACE,6BACE,uCACA,0BAAMQ,SAAU,SAAAC,GAAC,OAdA,SAAAA,GACnBA,EAAEC,iBACsB,SAApBN,EACFP,GAAgB,SAAAc,GAAW,OAAK,CAAEC,GAAIC,KAAKC,MAAsB,WAAhBD,KAAKE,UAAwBX,kBAAiBzB,iBAAgBD,gBAApF,mBAAsGiC,OACpG,WAApBP,EACTL,GAAkB,SAAAY,GAAW,OAAK,CAAEC,GAAIC,KAAKC,MAAsB,WAAhBD,KAAKE,UAAwBX,kBAAiBzB,iBAAgBD,gBAApF,mBAAsGiC,OAEnIV,GAAgB,SAAAU,GAAW,OAAK,CAAEC,GAAIC,KAAKC,MAAsB,WAAhBD,KAAKE,UAAwBX,kBAAiBzB,iBAAgBD,gBAApF,mBAAsGiC,OAO5GK,CAAaP,KAChC,2BAAOQ,UAAQ,EAACC,KAAK,OAAOC,YAAY,0BAA0BC,MAAO1C,EAAa2C,SAAU,SAAAZ,GAAC,OAAIP,EAAeO,EAAEa,OAAOF,UAC7H,2BAAOH,UAAQ,EAACC,KAAK,SAASK,KAAK,OAAOH,MAAOzC,EAAgB0C,SAAU,SAAAZ,GAAC,OAAIN,EAAkBM,EAAEa,OAAOF,UAC3G,4BAAQH,UAAQ,EAACO,aAAa,GAAGC,KAAK,kBAAkBJ,SAAU,SAAAZ,GAAC,OAAIJ,EAAmBI,EAAEa,OAAOF,SACjG,4BAAQM,UAAQ,EAACN,MAAM,IAAvB,mBACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,iBAEF,2BAAOF,KAAK,SAASE,MAAM,iBAE7B,6BACE,yBAAKO,UAAU,qBACb,uCACA,gCAAMhC,EAAQiC,QAAQ,KAExB,yBAAKD,UAAU,oBACb,sCACA,gCAAMlC,EAAOmC,QAAQ,KAEvB,yBAAKD,UAAU,qBACb,uCACA,gCAAMjC,EAAQkC,QAAQ,MAG1B,yBAAKD,UAAU,sBACb,6BACE,6BACE,sCACA,6BAEI3B,EAAa6B,KAAI,SAAApD,GAAO,OAAI,kBAAC,EAAD,CAAaqD,IAAKrD,EAAQmC,GAAInC,QAASA,SAIzE,sCACA,6BAEImB,EAAaiC,KAAI,SAAApD,GAAO,OAAI,kBAAC,EAAD,CAAaqD,IAAKrD,EAAQmC,GAAInC,QAASA,SAIzE,6BACE,wCACA,6BAEIqB,EAAe+B,KAAI,SAAApD,GAAO,OAAI,kBAAC,EAAD,CAAaqD,IAAKrD,EAAQmC,GAAInC,QAASA,SAI3E,6BACE,mDC/GGsD,EAAkB,SAAC,GAAmC,IAAjCzC,EAAgC,EAAhCA,YAAa0C,EAAmB,EAAnBA,aAa7C,OACE,4BACE,4BAAK1C,EAAY2C,UAbf3C,EAAYC,OAAS,EAErB,wBAAIoC,UAAU,YAAd,KAA4Bd,KAAKqB,IAAI5C,EAAYC,QAAQqC,QAAQ,IAIjE,wBAAID,UAAU,YAAd,IAA2BnC,WAAWF,EAAYC,QAAQqC,QAAQ,IASpE,4BAAKtC,EAAY6C,MACjB,4BAAK7C,EAAY8C,aACjB,wBAAIC,QAAS,kBAAML,EAAa1C,EAAYsB,MAA5C,YClBO0B,EAAe,WAC1B,IADgC,EAaQzD,oBAAS,WAG/C,OAFgBE,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAE3EoD,MAAK,SAAUC,EAAGC,GAC/B,OAAID,EAAEL,KAAOM,EAAEN,MAAgB,EAC3BK,EAAEL,KAAOM,EAAEN,KAAe,EACvB,QAnBqB,mBAazBrD,EAbyB,KAaX4D,EAbW,OAwBA7D,mBAAS,IAxBT,mBAwBzBoD,EAxByB,KAwBfU,EAxBe,OAyBJ9D,mBAAS,GAzBL,mBAyBzBU,EAzByB,KAyBjBqD,EAzBiB,OA0BR/D,oBAzBL,WAAO,IAAD,GACE,IAAIgE,MAAOC,qBAAqBC,MAAM,KADxC,mBAClBC,EADkB,KACXC,EADW,KACNC,EADM,KASvB,OAPqB,IAAjBF,EAAMG,SACRH,EAAK,WAAOA,IAGK,IAAfC,EAAIE,SACNH,EAAK,WAAOC,IAER,GAAN,OAAUC,EAAV,YAAkBF,EAAlB,YAA2BC,MAVG,mBA0BzBd,EA1ByB,KA0BnBiB,EA1BmB,OA2BMvE,mBAAS,IA3Bf,mBA2BzBuD,EA3ByB,KA2BZiB,EA3BY,OA4BFxE,mBAAS,IA5BP,mBA4BhByE,GA5BgB,aA6BRzE,mBAAS,IA7BD,mBA6BzBqC,EA7ByB,KA6BnBqC,EA7BmB,KA+BhCjD,qBAAU,WACRrB,aAAasB,QAAQ,uBAAwBxB,KAAKI,UAAUL,MAC3D,CAACA,IAEJ,IA6DMkD,EAAe,SAAApB,GACnB,IAAM4C,EAAkB1E,EAAa2E,QAAO,SAAAnE,GAAW,OAAIA,EAAYsB,KAAOA,KAC9E3B,aAAayE,QACbzE,aAAasB,QAAQ,uBAAwBxB,KAAKI,UAAUqE,IAC5Dd,EAAgBc,IA6BlB,OACE,6BACE,4CACA,0BAAMhD,SAAU,SAAAC,GAAC,OAjGA,SAAAA,GACnBA,EAAEC,iBACFgC,GAAgB,SAAAiB,GAAe,OAAK,CAAE/C,GAAIC,KAAKC,MAAsB,WAAhBD,KAAKE,UAAwBkB,WAAU1C,SAAQ4C,OAAMjB,OAAMkB,gBAAjF,mBAAmGuB,OAClIhB,EAAY,IACZC,EAAU,IA6Fa5B,CAAaP,KAChC,4BAAQQ,UAAQ,EAACO,aAAa,GAAGC,KAAK,WAAWJ,SAAU,SAAAZ,GAAC,OAAIkC,EAAYlC,EAAEa,OAAOF,SACnF,4BAAQM,UAAQ,EAACN,MAAM,IAAvB,YACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOH,UAAQ,EAACC,KAAK,SAAS0C,IAAI,IAAIrC,KAAK,OAAOH,MAAO7B,EAAQ4B,YAAY,SAASE,SAAU,SAAAZ,GAAC,OAAImC,EAAUnC,EAAEa,OAAOF,UACxH,2BAAOF,KAAK,OAAOE,MAAOe,EAAMd,SAAU,SAAAZ,GAAC,OAAI2C,EAAQ3C,EAAEa,OAAOF,UAChE,4BAAQH,UAAQ,EAACO,aAAa,GAAGC,KAAK,UAAUJ,SAAU,SAAAZ,GAAC,OAAI6C,EAAW7C,EAAEa,OAAOF,SACjF,4BAAQM,UAAQ,EAACN,MAAM,IAAvB,qBAtBY,WAClB,IAAMxB,EAAeb,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KACzFW,EAAiBf,KAAKC,MAAMC,aAAaC,QAAQ,2BAA6BH,KAAKI,UAAU,KAC7Fa,EAAejB,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAC/F,MAAM,GAAN,mBAAWS,GAAX,YAA4BE,GAA5B,YAA+CE,IAoBvC6D,GAAchC,KAAI,SAACpD,EAASqF,GAC1B,OACE,4BAAQhC,IAAKgC,EAAG1C,MAAK,UAAK3C,EAAQC,cAAgBD,EAAQC,iBAKlE,4BAAQuC,UAAQ,EAACO,aAAa,GAAGC,KAAK,OAAOJ,SAAU,SAAAZ,GAAC,OAAI8C,EAAQ9C,EAAEa,OAAOF,SAC3E,4BAAQM,UAAQ,EAACN,MAAM,IAAvB,qBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,WAEF,2BAAOH,UAAQ,EAACC,KAAK,OAAOE,MAAOgB,EAAajB,YAAY,uBAAuBE,SAAU,SAAAZ,GAAC,OAAI4C,EAAe5C,EAAEa,OAAOF,UAC1H,2BAAOF,KAAK,SAASE,MAAM,qBAE7B,+BACE,+BACE,4BACE,wBAAIO,UAAU,kBAAkBU,QAAS,SAAA5B,GAAC,OA1H/B,SAAAA,GACnBxB,aAAayE,QACb,IAAMK,EAAiBtD,EAAEa,OACnB0C,EAAYD,EAAeE,UAAUC,SAAS,aAEpDxB,GAAgB,SAAAiB,GACd,IAAIH,EAAe,YAAOG,GAC1B,OAAIK,GACFD,EAAeE,UAAUE,OAAO,aACzBX,EAAgBjB,MAAK,SAAUC,EAAGC,GACvC,OAAID,EAAEP,SAAWQ,EAAER,UAAoB,EACnCO,EAAEP,SAAWQ,EAAER,SAAmB,EAC/B,OAGT8B,EAAeE,UAAUG,IAAI,aACtBZ,EAAgBjB,MAAK,SAAUC,EAAGC,GACvC,OAAID,EAAEP,SAAWQ,EAAER,UAAoB,EACnCO,EAAEP,SAAWQ,EAAER,SAAmB,EAC/B,SAKbhD,aAAasB,QAAQ,uBAAwBxB,KAAKI,UAAUL,IAkGNuF,CAAa5D,KAA3D,YACA,wBAAIkB,UAAU,gBAAgBU,QAAS,SAAA5B,GAAC,OA9D/B,SAAAA,GACjBxB,aAAayE,QACb,IAAMY,EAAe7D,EAAEa,OACjB0C,EAAYM,EAAaL,UAAUC,SAAS,aAElDxB,GAAgB,SAAAiB,GACd,IAAIH,EAAe,YAAOG,GAC1B,OAAIK,GACFM,EAAaL,UAAUE,OAAO,aACvBX,EAAgBjB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAElD,OAASiD,EAAEjD,YAEnD+E,EAAaL,UAAUG,IAAI,aACpBZ,EAAgBjB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjD,OAASkD,EAAElD,cAIvDN,aAAasB,QAAQ,uBAAwBxB,KAAKI,UAAUL,IA8CRyF,CAAW9D,KAAvD,UACA,wBAAIkB,UAAU,cAAcU,QAAS,SAAA5B,GAAC,OAjG/B,SAAAA,GACfxB,aAAayE,QACb,IAAMc,EAAa/D,EAAEa,OACf0C,EAAYQ,EAAWP,UAAUC,SAAS,aAEhDxB,GAAgB,SAAAiB,GACd,IAAIH,EAAe,YAAOG,GAC1B,OAAKK,GAQHQ,EAAWP,UAAUE,OAAO,aACrBX,EAAgBjB,MAAK,SAAUC,EAAGC,GACvC,OAAID,EAAEL,KAAOM,EAAEN,MAAgB,EAC3BK,EAAEL,KAAOM,EAAEN,KAAe,EACvB,OAXTqC,EAAWP,UAAUG,IAAI,aAClBZ,EAAgBjB,MAAK,SAAUC,EAAGC,GACvC,OAAID,EAAEL,KAAOM,EAAEN,MAAgB,EAC3BK,EAAEL,KAAOM,EAAEN,KAAe,EACvB,SAYblD,aAAasB,QAAQ,uBAAwBxB,KAAKI,UAAUL,IAyEV2F,CAAShE,KAAnD,QACA,2CACA,yCAGJ,+BAEI3B,EAAa+C,KAAI,SAAAvC,GAAW,OAAI,kBAAC,EAAD,CAAiBwC,IAAKxC,EAAYsB,GAAItB,YAAaA,EAAa0C,aAAcA,W,QC7K7G0C,EAAe,WAC1B,IADgC,EA2CR7F,oBA1CL,WAAO,IAAD,GACE,IAAIgE,MAAOC,qBAAqBC,MAAM,KADxC,mBAClBC,EADkB,KACXC,EADW,KACNC,EADM,KAUvB,OARqB,IAAjBF,EAAMG,SACRH,EAAK,WAAOA,IAGK,IAAfC,EAAIE,SACNH,EAAK,WAAOC,IAGR,GAAN,OAAUC,EAAV,YAAkBF,EAAlB,YAA2BC,MAXG,mBA2CzBd,EA3CyB,KA2CnBiB,EA3CmB,KA4C1BuB,EAAO,CACXC,OAAQ,CAAC,YAAa,WAAY,YAAa,SAC/CC,SAAU,CACR,CACEC,MAAO,WACPC,gBAAiB,CACf,UACA,UACA,UACA,UACA,WAEFC,qBAAsB,CACpB,UACA,UACA,UACA,UACA,WAEFL,KArCiB,WACrB,IAAM7F,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAEzF8F,EAAY,GAWlB,MAZmB,CAAC,YAAa,WAAY,YAAa,SAE/C5F,SAAQ,SAAA4C,GACjB,IAAI7C,EAAQ,EACZN,EAAaO,SAAQ,SAAAC,GACfA,EAAY2C,WAAaA,EAASiD,eAAiB5F,EAAY6C,OAASA,GAA6B,YAArB7C,EAAY4B,OAC9F9B,GAASI,WAAWF,EAAYC,YAGpC0F,EAAUE,KAAK/F,EAAMwC,QAAQ,OAGxBqD,EAuBGG,MAKZ,OACE,6BACE,2BAAOlE,KAAK,OAAOE,MAAOe,EAAMd,SAAU,SAAAZ,GAAC,OAAI2C,EAAQ3C,EAAEa,OAAOF,UAChE,kCAzDkB,WACpB,IAAMtC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAC3FC,EAAQ,EAOZ,OANAN,EAAaO,SAAQ,SAAAC,GACfA,EAAY6C,OAASA,GAAQ3C,WAAWF,EAAYC,QAAU,IAChEH,GAASI,WAAWF,EAAYC,YAI7BH,EAAMwC,QAAQ,GAgDXyD,IACR,yBAAK1D,UAAU,uBAEXgD,EAAKE,SAAS,GAAGF,KAAKW,OAAM,SAAA/F,GAAM,MAAe,SAAXA,KACtC,0BAAMoC,UAAU,qBAAhB,6CAAuF,KAEzF,kBAAC,MAAD,CACEgD,KAAMA,EACNY,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAM,0BACNC,SAAU,IAEZC,OAAQ,CACNH,SAAS,EACTI,SAAU,eCtFXC,EAAU,WAIrB,OACE,6BACE,6BACE,kBAAC,IAAD,CAASzH,gBAAgB,qBAAqBC,OAAK,EAACC,GAAG,iBAAvD,SACA,kBAAC,IAAD,CAASF,gBAAgB,qBAAqBC,OAAK,EAACC,GAAG,gBAAvD,QACA,kBAAC,IAAD,CAASF,gBAAgB,qBAAqBC,OAAK,EAACC,GAAG,iBAAvD,Y,iBCTKwH,EAAgB,WAC3B,IAaMC,EAAU,WAKd,IAJA,IAGI/C,EAHAgD,EAAa,IAAIpD,KAAJ,UAAYV,EAAZ,wBAAwC+D,SACnDC,EAAO,GACPC,EAAgBC,IAAOlE,EAAM,cAE5BgE,EAAKhD,OAAS,GACf8C,EAAY,IACdhD,EAAMmD,EAAcE,QAAQC,SAASN,EAAW,QAAQO,OAAO,eAC3DzD,MAAM,KAAK0D,KAAK,KACpBN,EAAKhB,KAAKlC,IACDgD,EAAY,IACrBhD,EAAMmD,EAAcE,QAAQlC,IAAIvD,KAAKqB,IAAI+D,GAAY,QAAQO,OAAO,eAChEzD,MAAM,KAAK0D,KAAK,KACpBN,EAAKhB,KAAKlC,IAEVkD,EAAKhB,KAAKhD,GAEZ8D,IAGF,OAAOE,GAlCwB,EAmETtH,oBAlEL,WAAO,IAAD,GACE,IAAIgE,MAAOC,qBAAqBC,MAAM,KADxC,mBAClBC,EADkB,KACXC,EADW,KACNC,EADM,KAUvB,OARqB,IAAjBF,EAAMG,SACRH,EAAK,WAAOA,IAGK,IAAfC,EAAIE,SACNH,EAAK,WAAOC,IAGR,GAAN,OAAUC,EAAV,YAAkBF,EAAlB,YAA2BC,MAXI,mBAmE1Bd,EAnE0B,KAmEpBiB,EAnEoB,KAqE3BuB,EAAO,CACXC,OAAQoB,IACRnB,SAAU,CACR,CACEC,MAAO,kBACP4B,MAAM,EACNC,YAAa,GACb5B,gBAAiB,uBACjB6B,YAAa,mBACbC,YAAa,EACblC,KA7Be,WACnB,IAAM7F,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KACzFwF,EAAO,GAYb,OAXaqB,IACR3G,SAAQ,SAAA4D,GACX,IAAI6D,EAAgB,EACpBhI,EAAaO,SAAQ,SAAAC,GACfA,EAAY6C,OAASc,IACvB6D,GAAiBtH,WAAWF,EAAYC,YAG5CoF,EAAKQ,KAAK2B,EAAclF,QAAQ,OAG3B+C,EAeGoC,MAKZ,OACE,6BACE,2BAAO7F,KAAK,OAAOE,MAAOe,EAAMd,SAAU,SAAAZ,GAAC,OAAI2C,EAAQ3C,EAAEa,OAAOF,UAChE,kCAlDkB,WACpB,IAAMtC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAC3FC,EAAQ,EACN+G,EAAOH,IAOb,OANAlH,EAAaO,SAAQ,SAAAC,GACf6G,EAAKa,SAAS1H,EAAY6C,QAC5B/C,GAASI,WAAWF,EAAYC,YAI7BH,EAAMwC,QAAQ,GAwCXyD,IACR,6BAEIW,IAAUnE,KAAI,SAACoB,EAAKa,GAAN,OAAY,yBAAKhC,IAAKgC,GAAIb,OAG5C,yBAAKtB,UAAU,wBACb,kBAAC,OAAD,CACEgD,KAAMA,EACNY,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAK,2BACLC,SAAU,IAEZC,OAAQ,CACNH,SAAS,SCxGVwB,EAAiB,WAC5B,IA4BMC,EAAW,WAGf,IAFA,IAAMC,EAAU,IAAItE,KAAKV,EAAKiF,MAAM,EAAG,GAAIjF,EAAKiF,MAAM,EAAE,GAAI,GAAGC,UACzDC,EAAY,GACTxD,EAAI,EAAGA,GAAKqD,EAASrD,IACxBA,EAAEyD,WAAWpE,OAAS,EACxBmE,EAAUnC,KAAV,UAAkBhD,EAAKiF,MAAM,EAAG,GAAhC,YAAsCjF,EAAKiF,MAAM,EAAG,GAApD,aAA2DtD,IAE3DwD,EAAUnC,KAAV,UAAkBhD,EAAKiF,MAAM,EAAG,GAAhC,YAAsCjF,EAAKiF,MAAM,EAAG,GAApD,YAA0DtD,IAI9D,OAAOwD,GAxCyB,EA4DVzI,oBA3DL,WAAO,IAAD,GACE,IAAIgE,MAAOC,qBAAqBC,MAAM,KADxC,mBAClBC,EADkB,KACXC,EADW,KACNC,EADM,KAUvB,OARqB,IAAjBF,EAAMG,SACRH,EAAK,WAAOA,IAGK,IAAfC,EAAIE,SACNH,EAAK,WAAOC,IAGR,GAAN,OAAUC,EAAV,YAAkBF,EAAlB,YAA2BC,MAXK,mBA4D3Bd,EA5D2B,KA4DrBiB,EA5DqB,KA6D5BuB,EAAO,CACXC,OAAQsC,IACRrC,SAAU,CACR,CACEC,MAAO,mBACP4B,MAAM,EACNC,YAAa,GACb5B,gBAAiB,uBACjB6B,YAAa,gBACbC,YAAa,EACblC,KA5Be,WACnB,IAAM7F,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KACzFwF,EAAO,GAYb,OAXcuC,IACR7H,SAAQ,SAAA4D,GACZ,IAAI6D,EAAgB,EACpBhI,EAAaO,SAAQ,SAAAC,GACfA,EAAY6C,OAASc,IACvB6D,GAAiBtH,WAAWF,EAAYC,YAG5CoF,EAAKQ,KAAK2B,EAAclF,QAAQ,OAG3B+C,EAcGoC,MAKZ,OACE,6BACE,2BAAO7F,KAAK,OAAOE,MAAOe,EAAMd,SAAU,SAAAZ,GAAC,OAAI2C,EAAQ3C,EAAEa,OAAOF,UAChE,kCAjEkB,WACpB,IAAMtC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,yBAA2BH,KAAKI,UAAU,KAC3FC,EAAQ,EAUZ,OATAN,EAAaO,SAAQ,SAAAC,GACnB,IAAMkI,EAAmBlI,EAAY6C,KAAKiF,MAAM,EAAG,GAC7CK,EAAkBnI,EAAY6C,KAAKiF,MAAM,EAAG,GAE9CI,IAAqBrF,EAAKiF,MAAM,EAAG,IAAMK,IAAoBtF,EAAKiF,MAAM,EAAG,IAAM5H,WAAWF,EAAYC,QAAU,IACpHH,GAASI,WAAWF,EAAYC,YAI7BH,EAAMwC,QAAQ,GAqDXyD,IAIR,yBAAK1D,UAAU,wBACb,kBAAC,OAAD,CACEgD,KAAMA,EACNY,QAAS,CACPC,MAAO,CACLC,SAAS,EACTC,KAAK,4BACLC,SAAU,IAEZC,OAAQ,CACNH,SAAS,SCpERiC,MAhBf,WACE,OACI,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWhJ,IAClC,kBAAC,IAAD,CAAO+I,KAAK,gBAAgBC,UAAWtF,IACvC,kBAAC,IAAD,CAAOqF,KAAK,UAAUC,UAAW9B,IACjC,kBAAC,IAAD,CAAO6B,KAAK,gBAAgBC,UAAWlD,IACvC,kBAAC,IAAD,CAAOiD,KAAK,eAAeC,UAAW7B,IACtC,kBAAC,IAAD,CAAO4B,KAAK,gBAAgBC,UAAWX,OClBjDY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b70f1527.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav>\n      <ul>\n        <NavLink activeClassName='nav-active' exact to='/summary'>Summary</NavLink>\n        <NavLink activeClassName='nav-active' exact to='/transactions'>Transactions</NavLink>\n        <NavLink activeClassName='nav-active' exact to='/report'>Reports</NavLink>\n      </ul>\n    </nav>\n  )\n}\n","import React from 'react'\n\nexport const AccountItem = ({ account }) => {\n  return (\n    <div>\n      <div>{account.institution}</div>\n      <div>{account.accountBalance}</div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { AccountItem } from './AccountItem';\n\nexport const Summary = () => {\n  const [income, setIncome] = useState(() => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    transactions.forEach(transaction => {\n      if (transaction.amount > 0) {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return total;\n  })\n\n  const [expense, setExpense] = useState(() => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    transactions.forEach(transaction => {\n      if (transaction.amount < 0) {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return total;\n  })\n\n  const [balance, setBalance] = useState(income + expense);\n  const [cashAccounts, setCashAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppCashAccounts') || JSON.stringify([])));\n  const [creditAccounts, setCreditAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppCreditAccounts') || JSON.stringify([])));\n  const [bankAccounts, setBankAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppBankAccounts') || JSON.stringify([])));\n  const [institution, setInstitution] = useState('');\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [accountCategory, setAccountCategory] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppCashAccounts', JSON.stringify(cashAccounts));\n  }, [cashAccounts])\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppCreditAccounts', JSON.stringify(creditAccounts));\n  }, [creditAccounts])\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppBankAccounts', JSON.stringify(bankAccounts));\n  }, [bankAccounts])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (accountCategory === 'cash') {\n      setCashAccounts(oldAccounts => [{ id: Math.floor(Math.random() * 9999999999), accountCategory, accountBalance, institution }, ...oldAccounts])\n    } else if (accountCategory === 'credit') {\n      setCreditAccounts(oldAccounts => [{ id: Math.floor(Math.random() * 9999999999), accountCategory, accountBalance, institution }, ...oldAccounts])\n    } else {\n      setBankAccounts(oldAccounts => [{ id: Math.floor(Math.random() * 9999999999), accountCategory, accountBalance, institution }, ...oldAccounts])\n    }\n  }\n\n  return (\n    <div>\n      <h2>Summary</h2>\n      <form onSubmit={e => handleSubmit(e)}>\n        <input required type=\"text\" placeholder=\"Enter an institution...\" value={institution} onChange={e => setInstitution(e.target.value)} />\n        <input required type=\"number\" step=\"0.01\" value={accountBalance} onChange={e => setAccountBalance(e.target.value)} />\n        <select required defaultValue='' name=\"accountCategory\" onChange={e => setAccountCategory(e.target.value)}>\n          <option disabled value=\"\">Select Category</option>\n          <option value=\"cash\">Cash</option>\n          <option value=\"credit\">Credit</option>\n          <option value=\"banks\">Bank Account</option>\n        </select>\n        <input type=\"submit\" value=\"Add Account\" />\n      </form>\n      <div>\n        <div className=\"balance-container\">\n          <h4>Balance</h4>\n          <h2>${balance.toFixed(2)}</h2>\n        </div>\n        <div className=\"income-container\">\n          <h4>Income</h4>\n          <h3>${income.toFixed(2)}</h3>\n        </div>\n        <div className=\"expense-container\">\n          <h4>Expense</h4>\n          <h3>${expense.toFixed(2)}</h3>\n        </div>\n      </div>\n      <div className='accounts-container'>\n        <div>\n          <div>\n            <span>Bank</span>\n            <div>\n              {\n                bankAccounts.map(account => <AccountItem key={account.id} account={account} />)\n              }\n            </div>\n          </div>\n          <span>Cash</span>\n          <div>\n            {\n              cashAccounts.map(account => <AccountItem key={account.id} account={account} />)\n            }\n          </div>\n        </div>\n        <div>\n          <span>Credit</span>\n          <div>\n            {\n              creditAccounts.map(account => <AccountItem key={account.id} account={account} />)\n            }\n          </div>\n        </div>\n        <div>\n          <span>Miscellaneous</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const TransactionItem = ({ transaction, handleDelete }) => {\n  const renderAmount = () => {\n    if (transaction.amount < 0) {\n      return (\n        <td className='negative'>-${Math.abs(transaction.amount).toFixed(2)}</td>\n      )\n    } else {\n      return (\n        <td className='positive'>${parseFloat(transaction.amount).toFixed(2)}</td>\n      )\n    }\n  }\n\n  return (\n    <tr>\n      <td>{transaction.category}</td>\n      {renderAmount()}\n      <td>{transaction.date}</td>\n      <td>{transaction.description}</td>\n      <td onClick={() => handleDelete(transaction.id)}>Delete</td>\n    </tr>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { TransactionItem } from './TransactionItem';\n\nexport const Transactions = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n    return `${year}-${month}-${day}`\n  }\n\n  const [transactions, setTransactions] = useState(() => {\n    const initial = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n\n    return initial.sort(function (a, b) {\n      if (a.date > b.date) { return -1; }\n      if (a.date < b.date) { return 1; }\n      return 0;\n    });\n\n  });\n\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [date, setDate] = useState(todaysDate);\n  const [description, setDescription] = useState('');\n  const [account, setAccount] = useState('');\n  const [type, setType] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setTransactions(oldTransactions => [{ id: Math.floor(Math.random() * 9999999999), category, amount, date, type, description }, ...oldTransactions])\n    setCategory('');\n    setAmount('');\n  }\n\n  const sortCategory = e => {\n    localStorage.clear();\n    const categoryHeader = e.target;\n    const ascending = categoryHeader.classList.contains(\"ascending\")\n\n    setTransactions(oldTransactions => {\n      let newTransactions = [...oldTransactions];\n      if (ascending) {\n        categoryHeader.classList.remove(\"ascending\");\n        return newTransactions.sort(function (a, b) {\n          if (a.category > b.category) { return -1; }\n          if (a.category < b.category) { return 1; }\n          return 0;\n        });\n      } else {\n        categoryHeader.classList.add(\"ascending\");\n        return newTransactions.sort(function (a, b) {\n          if (a.category < b.category) { return -1; }\n          if (a.category > b.category) { return 1; }\n          return 0;\n        });\n      }\n    })\n\n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }\n\n  const sortDate = e => {\n    localStorage.clear();\n    const dateHeader = e.target;\n    const ascending = dateHeader.classList.contains(\"ascending\")\n\n    setTransactions(oldTransactions => {\n      let newTransactions = [...oldTransactions];\n      if (!ascending) {\n        dateHeader.classList.add(\"ascending\");\n        return newTransactions.sort(function (a, b) {\n          if (a.date < b.date) { return -1; }\n          if (a.date > b.date) { return 1; }\n          return 0;\n        });\n      } else {\n        dateHeader.classList.remove(\"ascending\");\n        return newTransactions.sort(function (a, b) {\n          if (a.date > b.date) { return -1; }\n          if (a.date < b.date) { return 1; }\n          return 0;\n        });\n      }\n    })\n\n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }\n\n  const handleDelete = id => {\n    const newTransactions = transactions.filter(transaction => transaction.id !== id)\n    localStorage.clear();\n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(newTransactions));\n    setTransactions(newTransactions)\n  }\n\n  const sortAmount = e => {\n    localStorage.clear();\n    const amountHeader = e.target;\n    const ascending = amountHeader.classList.contains(\"ascending\")\n\n    setTransactions(oldTransactions => {\n      let newTransactions = [...oldTransactions];\n      if (ascending) {\n        amountHeader.classList.remove(\"ascending\")\n        return newTransactions.sort((a, b) => b.amount - a.amount);\n      } else {\n        amountHeader.classList.add(\"ascending\")\n        return newTransactions.sort((a, b) => a.amount - b.amount);\n      }\n    })\n    \n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }\n\n  const getAccounts = () => {\n    const cashAccounts = JSON.parse(localStorage.getItem('ExtraAppCashAccounts') || JSON.stringify([]))\n    const creditAccounts = JSON.parse(localStorage.getItem('ExtraAppCreditAccounts') || JSON.stringify([]))\n    const bankAccounts = JSON.parse(localStorage.getItem('ExtraAppBankAccounts') || JSON.stringify([]))\n    return [...cashAccounts, ...creditAccounts, ...bankAccounts];\n  }\n  \n  return (\n    <div>\n      <h2>Transactions</h2>\n      <form onSubmit={e => handleSubmit(e)}>\n        <select required defaultValue='' name=\"category\" onChange={e => setCategory(e.target.value)}>\n          <option disabled value=\"\">Category</option>\n          <option value=\"groceries\">Groceries</option>\n          <option value=\"income\">Income</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"utilities\">Utilities</option>\n          <option value=\"other\">Other</option>\n        </select>\n        <input required type=\"number\" min='0' step='0.01' value={amount} placeholder=\"amount\" onChange={e => setAmount(e.target.value)} />\n        <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n        <select required defaultValue='' name=\"account\" onChange={e => setAccount(e.target.value)}>\n          <option disabled value=\"\">Choose an account</option>\n          {\n            getAccounts().map((account, i) => {\n              return (\n                <option key={i} value={`${account.institution}`}>{account.institution}</option>\n              )\n            })\n          }\n        </select>\n        <select required defaultValue='' name=\"type\" onChange={e => setType(e.target.value)}>\n          <option disabled value=\"\">Select entry type</option>\n          <option value=\"expense\">Expense</option>\n          <option value=\"income\">Income</option>\n        </select>\n        <input required type=\"text\" value={description} placeholder='Add a description...' onChange={e => setDescription(e.target.value)} />\n        <input type=\"submit\" value=\"Add Transaction\" />\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th className='category-header' onClick={e => sortCategory(e)}>Category</th>\n            <th className='amount-header' onClick={e => sortAmount(e)}>Amount</th>\n            <th className='date-header' onClick={e => sortDate(e)}>Date</th>\n            <th>Description</th>\n            <th>Options</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            transactions.map(transaction => <TransactionItem key={transaction.id} transaction={transaction} handleDelete={handleDelete} />)\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Pie } from 'react-chartjs-2';\n\nexport const DailyReports = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n\n    return `${year}-${month}-${day}`\n  }\n\n  const totalExpenses = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    transactions.forEach(transaction => {\n      if (transaction.date === date && parseFloat(transaction.amount) < 0) {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return total.toFixed(2);\n  }\n\n  const dailyBreakdown = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    const categories = ['Groceries', 'Personal', 'Utilities', 'Other'];\n    const breakdown = [];\n    categories.forEach(category => {\n      let total = 0;\n      transactions.forEach(transaction => {\n        if (transaction.category === category.toLowerCase() && transaction.date === date && transaction.type === 'expense') {\n          total += parseFloat(transaction.amount);\n        }\n      })\n      breakdown.push(total.toFixed(2));\n    })\n\n    return breakdown;\n  }\n\n  const [date, setDate] = useState(todaysDate);\n  const data = {\n    labels: ['Groceries', 'Personal', 'Utilities', 'Other'],\n    datasets: [\n      {\n        label: 'Rainfall',\n        backgroundColor: [\n          '#B21F00',\n          '#C9DE00',\n          '#2FDE00',\n          '#00A6B4',\n          '#6800B4'\n        ],\n        hoverBackgroundColor: [\n          '#501800',\n          '#4B5000',\n          '#175000',\n          '#003350',\n          '#35014F'\n        ],\n        data: dailyBreakdown()\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n      <span>${totalExpenses()}</span>\n      <div className='pie-chart-container'>\n        {\n          data.datasets[0].data.every(amount => amount === '0.00') ? \n          <span className='empty-pie-message'>You have no expenses for the selected day</span> : null\n        }\n        <Pie\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: 'Daily Expense Breakdown',\n              fontSize: 30\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { DailyReports } from './DailyReports';\n\nexport const Reports = () => {\n  const getWeek = () => {\n  }\n\n  return (\n    <div>\n      <div>\n        <NavLink activeClassName='reports-nav-active' exact to='/report/daily'>Daily</NavLink>\n        <NavLink activeClassName='reports-nav-active' exact to='/report/week'>Week</NavLink>\n        <NavLink activeClassName='reports-nav-active' exact to='/report/month'>Month</NavLink>\n        {/* {DailyReports()} */}\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment';\nimport { Line } from 'react-chartjs-2';\n\nexport const WeeklyReports = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n\n    return `${year}-${month}-${day}`\n  }\n\n  const getWeek = () => {\n    let dayOfWeek = (new Date(`${date}T00:00:00.000-07:00`)).getDay();\n    const week = [];\n    const referenceDate = moment(date, \"YYYY-MM-DD\") \n    let day;\n    while (week.length < 7) {\n      if (dayOfWeek > 0) {\n        day = referenceDate.clone().subtract(dayOfWeek, 'days').format(\"YYYY-MM-DD\");\n        day.split('/').join('-');\n        week.push(day);\n      } else if (dayOfWeek < 0) {\n        day = referenceDate.clone().add(Math.abs(dayOfWeek), 'days').format(\"YYYY-MM-DD\");\n        day.split('/').join('-');\n        week.push(day);\n      } else {\n        week.push(date);\n      }\n      dayOfWeek--;\n    }\n\n    return week;\n  }\n\n  const totalExpenses = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    const week = getWeek();\n    transactions.forEach(transaction => {\n      if (week.includes(transaction.date)) {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return total.toFixed(2);\n  }\n\n  const populateData = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    const data = [];\n    const week = getWeek();\n    week.forEach(day => {\n      let expenseForDay = 0;\n      transactions.forEach(transaction => {\n        if (transaction.date === day) {\n          expenseForDay += parseFloat(transaction.amount);\n        }\n      })\n      data.push(expenseForDay.toFixed(2));\n    })\n\n    return data;\n  }\n\n  const [date, setDate] = useState(todaysDate);\n\n  const data = {\n    labels: getWeek(),\n    datasets: [\n      {\n        label: 'Weekly Expenses',\n        fill: true,\n        lineTension: 0.2,\n        backgroundColor: 'rgba(12, 238, 99, 1)',\n        borderColor: 'rgba(0, 0, 0, 1)',\n        borderWidth: 2,\n        data: populateData()\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n      <span>${totalExpenses()}</span>\n      <div>\n        {\n          getWeek().map((day, i) => <div key={i}>{day}</div>)\n        }\n      </div>\n      <div className='line-graph-container'>\n        <Line\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: `Weekly Expense Breakdown`,\n              fontSize: 30\n            },\n            legend: {\n              display: false,\n            }, \n            // maintainAspectRatio: false,\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Line } from 'react-chartjs-2';\n\nexport const MonthlyReports = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n\n    return `${year}-${month}-${day}`\n  }\n\n  const totalExpenses = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    transactions.forEach(transaction => {\n      const transactionMonth = transaction.date.slice(5, 7);\n      const transactionYear = transaction.date.slice(0, 4);\n      \n      if (transactionMonth === date.slice(5, 7) && transactionYear === date.slice(0, 4) && parseFloat(transaction.amount) < 0) {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return total.toFixed(2);\n  }\n\n  const getMonth = () => {\n    const numDays = new Date(date.slice(0, 4), date.slice(5,7), 0).getDate();\n    const monthDays = [];\n    for (let i = 1; i <= numDays; i++) {\n      if (i.toString().length < 2) {\n        monthDays.push(`${date.slice(0, 4)}-${date.slice(5, 7)}-0${i}`)\n      } else {\n        monthDays.push(`${date.slice(0, 4)}-${date.slice(5, 7)}-${i}`)\n      }\n    }\n\n    return monthDays;\n  }\n\n  const populateData = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    const data = [];\n    const month = getMonth();\n    month.forEach(day => {\n      let expenseForDay = 0;\n      transactions.forEach(transaction => {\n        if (transaction.date === day) {\n          expenseForDay += parseFloat(transaction.amount);\n        }\n      })\n      data.push(expenseForDay.toFixed(2));\n    })\n\n    return data;\n  }\n\n  const [date, setDate] = useState(todaysDate);\n  const data = {\n    labels: getMonth(),\n    datasets: [\n      {\n        label: 'Monthly Expenses',\n        fill: true,\n        lineTension: 0.2,\n        backgroundColor: 'rgba(12, 238, 99, 1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: populateData()\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n      <span>${totalExpenses()}</span>\n      {/* {\n        getMonth().map((month, i) => <div key={i}>{month}</div>)\n      } */}\n      <div className='line-graph-container'>\n        <Line\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: `Monthly Expense Breakdown`,\n              fontSize: 30\n            },\n            legend: {\n              display: false,\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Navbar } from './components/Navbar';\nimport { Route, HashRouter } from 'react-router-dom';\nimport './App.css';\nimport './reset.css';\nimport { Summary } from './components/Summary';\nimport { Transactions } from './components/Transactions';\nimport { Reports } from './components/reports/Reports';\nimport { DailyReports } from './components/reports/DailyReports';\nimport { WeeklyReports } from './components/reports/WeeklyReports';\nimport { MonthlyReports } from './components/reports/MonthlyReports';\n\nfunction App() {\n  return (\n      <HashRouter>\n        <div>\n          <Navbar />\n          <Route path='/summary' component={Summary} />\n          <Route path='/transactions' component={Transactions} />\n          <Route path='/report' component={Reports} />\n          <Route path='/report/daily' component={DailyReports} />\n          <Route path='/report/week' component={WeeklyReports} />\n          <Route path='/report/month' component={MonthlyReports} />\n        </div>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}