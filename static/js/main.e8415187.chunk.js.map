{"version":3,"sources":["components/Navbar.jsx","components/AccountItem.jsx","components/Summary.jsx","components/TransactionItem.jsx","components/Transactions.jsx","components/reports/DailyReports.jsx","components/reports/Reports.jsx","components/reports/WeeklyReports.jsx","components/reports/MonthlyReports.jsx","App.js","index.js"],"names":["Navbar","className","to","onMouseEnter","document","querySelector","classList","add","onMouseLeave","remove","activeClassName","exact","AccountItem","account","formatNumber","index","institution","parseFloat","accountBalance","toFixed","Summary","useState","JSON","parse","localStorage","getItem","stringify","cashAccounts","setCashAccounts","creditAccounts","setCreditAccounts","bankAccounts","setBankAccounts","total","forEach","balance","setBalance","transactions","transaction","type","amount","expense","setInstitution","setAccountBalance","accountCategory","setAccountCategory","useEffect","setItem","num","toString","replace","onClick","e","formContainer","target","currentTarget","closeModal","onSubmit","preventDefault","oldAccounts","id","Math","floor","random","handleSubmit","required","placeholder","value","onChange","step","defaultValue","name","disabled","map","i","key","length","TransactionItem","handleDelete","category","date","description","Transactions","sort","a","b","setTransactions","setCategory","setAmount","Date","toLocaleDateString","split","month","day","year","setDate","setDescription","setAccount","setType","transactionToDelete","newTransactions","push","cashAccount","parseInt","slice","creditAccount","bankAccount","oldTransactions","min","getAccounts","categoryHeader","amountHeader","dateHeader","ascending","contains","sortCategory","incomeTransactions","filter","expenseTransactions","sortAmount","sortDate","DailyReports","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","breakdown","toLowerCase","dailyBreakdown","totalExpenses","every","options","title","display","text","fontSize","legend","position","Reports","WeeklyReports","getWeek","dayOfWeek","getDay","week","referenceDate","moment","clone","subtract","format","join","abs","fill","lineTension","borderColor","borderWidth","expenseForDay","populateData","includes","MonthlyReports","getMonth","numDays","getDate","monthDays","transactionMonth","transactionYear","App","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e8415187.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const expandLogo = () => {\n    const firstSpan = document.querySelector('.first-logo-span');\n    firstSpan.classList.add('expand');\n    const secondSpan = document.querySelector('.second-logo-span');\n    secondSpan.classList.add('expand');\n  }\n  \n  const shrinkLogo = () => {\n    const firstSpan = document.querySelector('.first-logo-span');\n    firstSpan.classList.remove('expand');\n    const secondSpan = document.querySelector('.second-logo-span');\n    secondSpan.classList.remove('expand');\n  }\n\n  return (\n    <nav className='main-nav-container'>\n      <div className='main-nav-logo'>\n        <Link to='/summary' className='logo-container' onMouseEnter={() => expandLogo()} onMouseLeave={() => shrinkLogo()}>\n          <span className='first-logo-span'>Expense</span>\n          <span className='second-logo-span'>Tracker</span>\n        </Link>\n      </div>\n      <div className='main-nav-bar'>\n        <div className=\"nav-bar-links-container\">\n          <NavLink className='main-nav-links' activeClassName='nav-active' exact to='/summary'>Summary</NavLink>\n          <NavLink className='main-nav-links' activeClassName='nav-active' exact to='/transactions'>Transactions</NavLink>\n          <NavLink className='main-nav-links' activeClassName='nav-active' exact to='/report/daily'>Reports</NavLink>\n\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import React from 'react'\n\nexport const AccountItem = ({ account, formatNumber, index }) => {\n  const checkIndex = () => {\n    return index % 2 === 0 ? 'even' : 'odd'\n  }\n\n  return (\n    <div className={`account-item-container color-${checkIndex()}`}>\n      <div className='institution-name'>{account.institution}</div>\n      <div>${formatNumber(parseFloat(account.accountBalance).toFixed(2))}</div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { AccountItem } from './AccountItem';\n\nexport const Summary = () => {\n  const [cashAccounts, setCashAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppCashAccounts') || JSON.stringify([])));\n  const [creditAccounts, setCreditAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppCreditAccounts') || JSON.stringify([])));\n  const [bankAccounts, setBankAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppBankAccounts') || JSON.stringify([])));\n\n  // const [assets, setAssets] = useState(() => {\n  //   const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n  //   let total = 0;\n  //   transactions.forEach(transaction => {\n  //     if (transaction.type === 'income') {\n  //       total += parseFloat(transaction.amount);\n  //     }\n  //   })\n    \n  //   const availableAccounts = [...cashAccounts, ...creditAccounts, ...bankAccounts];\n  //   availableAccounts.forEach(account => total += parseFloat(account.accountBalance));\n\n  //   return total;\n  // })\n  const [balance, setBalance] = useState(() => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n\n    const availableAccounts = [...cashAccounts, ...creditAccounts, ...bankAccounts];\n    availableAccounts.forEach(account => total += parseFloat(account.accountBalance));\n\n    return total;\n  })\n\n  const [expense, setExpense] = useState(() => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    transactions.forEach(transaction => {\n      if (transaction.type === 'expense') {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return total;\n  })\n\n  // const [balance, setBalance] = useState(assets - expense);\n  const [institution, setInstitution] = useState('');\n  const [accountBalance, setAccountBalance] = useState(0);\n  const [accountCategory, setAccountCategory] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppCashAccounts', JSON.stringify(cashAccounts));\n  }, [cashAccounts])\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppCreditAccounts', JSON.stringify(creditAccounts));\n  }, [creditAccounts])\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppBankAccounts', JSON.stringify(bankAccounts));\n  }, [bankAccounts])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (accountCategory === 'cash') {\n      setCashAccounts(oldAccounts => [{ id: Math.floor(Math.random() * 9999999999), accountCategory, accountBalance, institution }, ...oldAccounts])\n    } else if (accountCategory === 'credit') {\n      setCreditAccounts(oldAccounts => [{ id: Math.floor(Math.random() * 9999999999), accountCategory, accountBalance, institution }, ...oldAccounts])\n    } else {\n      setBankAccounts(oldAccounts => [{ id: Math.floor(Math.random() * 9999999999), accountCategory, accountBalance, institution }, ...oldAccounts])\n    }\n\n    setBalance(parseFloat(balance) + parseFloat(accountBalance));\n    setInstitution('');\n    setAccountBalance(0);\n  }\n\n  const formatNumber = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const openModal = () => {\n    const formContainer = document.querySelector('.summary-form-container');\n    formContainer.classList.add('open')\n  }\n\n  const closeModal = e => {\n    const formContainer = document.querySelector('.summary-form-container');\n    if (e.target === e.currentTarget) {\n      formContainer.classList.remove('open')\n    }\n  }\n\n  return (\n    <div className=\"summary-content\">\n      <h2 className=\"summary-header\">Summary</h2>\n      <div className='summary-form-container' onClick={e => closeModal(e)}>\n        <form className='summary-form' onSubmit={e => handleSubmit(e)}>\n          <div className='summary-form-title-container'>\n            <h2 className='summary-form-title'>Add an Account</h2>\n          </div>\n          <div className='summary-input-container'>\n            <label>Account Name</label>\n            <input className='summary-inputs first-input' required type=\"text\" placeholder=\"Enter account name...\" value={institution} onChange={e => setInstitution(e.target.value)} />\n          </div>\n          <div className='summary-input-container'>\n            <label>Account Balance</label>\n            <input className='summary-inputs' required type=\"number\" step=\"0.01\" value={accountBalance} onChange={e => setAccountBalance(e.target.value)} />\n          </div>\n          <select className='summary-inputs select-input' required defaultValue='' name=\"accountCategory\" onChange={e => setAccountCategory(e.target.value)}>\n            <option disabled value=\"\">Select Category</option>\n            <option value=\"cash\">Cash</option>\n            <option value=\"banks\">Bank Account</option>\n            <option value=\"credit\">Credit</option>\n          </select>\n          <div className='summary-button-containers'>\n            <input className='summary-submit-btn' type=\"submit\" value=\"Add Account\" />\n            <span className='summary-cancel-btn'>Cancel</span>\n          </div>\n        </form>\n      </div>\n      <div className='summary-overview-container'>\n        <div className='balance-expense-container'>\n          <div className=\"balance-container\">\n            <h4 className='summary-title'>Balance</h4>\n            <h3 className='balance-total'>${formatNumber(balance.toFixed(2))}</h3>\n          </div>\n          <div className=\"expense-container\">\n            <h4 className='summary-title'>Expenses</h4>\n            <h3 className='expenses-total'>${formatNumber(expense.toFixed(2))}</h3>\n          </div>\n        </div>\n      </div>\n      <hr className='hr-divider'/>\n      <div className='accounts-container'>\n        <div className=\"accounts-container-header\">\n          <h3 className='account-header'>Accounts</h3>\n          <span className='add-account-btn' onClick={openModal}>Add Account</span>\n        </div>\n        <div>\n          <span className='account-type-header'>Cash</span>\n          <div>\n            {\n              cashAccounts.map((account, i) => <AccountItem key={account.id} index={i} formatNumber={formatNumber} account={account} />)\n            }\n            {cashAccounts.length === 0 ? <div className='empty-account-message'>You don't have any cash accounts currently. Click \"Add Account\" to add one.</div> : null}\n          </div>\n          <span className='account-type-header'>Bank</span>\n          <div>\n            {\n              bankAccounts.map((account, i) => <AccountItem key={account.id} index={i} formatNumber={formatNumber} account={account} />)\n            }\n            {bankAccounts.length === 0 ? <div className='empty-account-message'>You don't have any bank accounts currently. Click \"Add Account\" to add one.</div> : null}\n          </div>\n        </div>\n        <div>\n          <span className='account-type-header'>Credit</span>\n          <div>\n            {\n              creditAccounts.map((account, i) => <AccountItem key={account.id} index={i} formatNumber={formatNumber} account={account} />)\n            }\n            {creditAccounts.length === 0 ? <div className='empty-account-message'>You don't have any credit accounts currently. Click \"Add Account\" to add one.</div> : null}\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const TransactionItem = ({ transaction, handleDelete }) => {\n  const checkTypeForAmount = () => {\n    if (transaction.type === 'expense') {\n      return `-$${formatNumber((parseFloat(transaction.amount)).toFixed(2))}`;\n    } else {\n      return `$${formatNumber((parseFloat(transaction.amount)).toFixed(2))}`\n    }\n  }\n\n  const formatNumber = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  \n  return (\n    <tr>\n      <td>{transaction.category}</td>\n      <td className={`${transaction.type}`}>{checkTypeForAmount()}</td>\n      <td>{transaction.date}</td>\n      <td>{transaction.description}</td>\n      <td onClick={() => handleDelete(transaction.id)}>Delete</td>\n    </tr>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { TransactionItem } from './TransactionItem';\n\nexport const Transactions = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n    return `${year}-${month}-${day}`\n  }\n\n  const [transactions, setTransactions] = useState(() => {\n    const initial = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n\n    return initial.sort(function (a, b) {\n      if (a.date > b.date) { return -1; }\n      if (a.date < b.date) { return 1; }\n      return 0;\n    });\n\n  });\n\n  const [category, setCategory] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [date, setDate] = useState(todaysDate);\n  const [description, setDescription] = useState('');\n  const [account, setAccount] = useState('');\n  const [type, setType] = useState('');\n\n  const [cashAccounts, setCashAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppCashAccounts') || JSON.stringify([])));\n  const [creditAccounts, setCreditAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppCreditAccounts') || JSON.stringify([])));\n  const [bankAccounts, setBankAccounts] = useState(JSON.parse(localStorage.getItem('ExtraAppBankAccounts') || JSON.stringify([])));\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppCashAccounts', JSON.stringify(cashAccounts));\n  }, [cashAccounts]);\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppCreditAccounts', JSON.stringify(creditAccounts));\n  }, [creditAccounts]);\n\n  useEffect(() => {\n    localStorage.setItem('ExtraAppBankAccounts', JSON.stringify(bankAccounts));\n  }, [bankAccounts]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setTransactions(oldTransactions => [{ id: Math.floor(Math.random() * 9999999999), category, amount, date, type, description, account }, ...oldTransactions])\n    setCategory('');\n    setAmount('');\n\n    cashAccounts.forEach(cashAccount =>  {\n      if (cashAccount.institution === account) {\n        if (type === 'income') {\n          cashAccount.accountBalance = parseInt(cashAccount.accountBalance) + parseInt(amount);\n          setCashAccounts(cashAccounts.slice());\n        } else {\n          cashAccount.accountBalance = parseInt(cashAccount.accountBalance) - parseInt(amount);\n          setCashAccounts(cashAccounts.slice());\n        }\n      }\n    })\n\n    creditAccounts.forEach(creditAccount => {\n      if (creditAccount.institution === account) {\n        if (type === 'income') {\n          creditAccount.accountBalance = parseInt(creditAccount.accountBalance) + parseInt(amount);\n          setCreditAccounts(creditAccounts.slice());\n        } else {\n          creditAccount.accountBalance = parseInt(creditAccount.accountBalance) - parseInt(amount);\n          setCreditAccounts(creditAccounts.slice());\n        }\n      }\n    })\n\n    bankAccounts.forEach(bankAccount => {\n      if (bankAccount.institution === account) {\n        if (type === 'income') {\n          bankAccount.accountBalance = parseInt(bankAccount.accountBalance) + parseInt(amount);\n          setBankAccounts(bankAccounts.slice());\n        } else {\n          bankAccount.accountBalance = parseInt(bankAccount.accountBalance) - parseInt(amount);\n          setBankAccounts(bankAccounts.slice());\n        }\n      }\n    })\n  }\n\n  const sortCategory = e => {\n    const categoryHeader = e.target;\n    const amountHeader = document.querySelector('.amount-header')\n    const dateHeader = document.querySelector('.date-header')\n    const ascending = categoryHeader.classList.contains(\"ascending\")\n\n    setTransactions(oldTransactions => {\n      let newTransactions = [...oldTransactions];\n      if (ascending) {\n        categoryHeader.classList.remove(\"ascending\");\n        return newTransactions.sort(function (a, b) {\n          if (a.category > b.category) { return -1; }\n          if (a.category < b.category) { return 1; }\n          return 0;\n        });\n      } else {\n        categoryHeader.classList.add(\"ascending\");\n        amountHeader.classList.remove(\"ascending\");\n        dateHeader.classList.remove(\"ascending\");\n        return newTransactions.sort(function (a, b) {\n          if (a.category < b.category) { return -1; }\n          if (a.category > b.category) { return 1; }\n          return 0;\n        });\n      }\n    })\n\n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }\n\n  const sortDate = e => {\n    const dateHeader = e.target;\n    const amountHeader = document.querySelector('.amount-header')\n    const categoryHeader = document.querySelector('.category-header')\n    const ascending = dateHeader.classList.contains(\"ascending\")\n\n    setTransactions(oldTransactions => {\n      let newTransactions = [...oldTransactions];\n      if (!ascending) {\n        dateHeader.classList.add(\"ascending\");\n        amountHeader.classList.remove(\"ascending\")\n        categoryHeader.classList.remove(\"ascending\")\n        return newTransactions.sort(function (a, b) {\n          if (a.date < b.date) { return -1; }\n          if (a.date > b.date) { return 1; }\n          return 0;\n        });\n      } else {\n        dateHeader.classList.remove(\"ascending\");\n        return newTransactions.sort(function (a, b) {\n          if (a.date > b.date) { return -1; }\n          if (a.date < b.date) { return 1; }\n          return 0;\n        });\n      }\n    })\n\n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }\n\n  const sortAmount = e => {\n    const amountHeader = e.target;\n    const categoryHeader = document.querySelector('.category-header')\n    const dateHeader = document.querySelector('.date-header')\n    const ascending = amountHeader.classList.contains(\"ascending\")\n\n    setTransactions(oldTransactions => {\n      let incomeTransactions = oldTransactions.filter(transaction => transaction.type === 'income');\n      let expenseTransactions = oldTransactions.filter(transaction => transaction.type === 'expense');\n      if (ascending) {\n        amountHeader.classList.remove(\"ascending\")\n        incomeTransactions.sort((a, b) => b.amount - a.amount);\n        expenseTransactions.sort((a, b) => b.amount - a.amount);\n        return [...incomeTransactions, ...expenseTransactions];\n      } else {\n        amountHeader.classList.add(\"ascending\")\n        categoryHeader.classList.remove(\"ascending\")\n        dateHeader.classList.remove(\"ascending\")\n        incomeTransactions.sort((a, b) => a.amount - b.amount);\n        expenseTransactions.sort((a, b) => a.amount - b.amount);\n        return [...expenseTransactions, ...incomeTransactions]\n      }\n    })\n    \n    localStorage.setItem('ExtraAppTransactions', JSON.stringify(transactions));\n  }\n\n  const handleDelete = id => {\n    let transactionToDelete;\n    const newTransactions = [];\n    transactions.forEach(transaction => {\n      if (transaction.id === id) {\n        transactionToDelete = transaction;\n      } else {\n        newTransactions.push(transaction);\n      }\n    })\n\n    cashAccounts.forEach(cashAccount => {\n      if (cashAccount.institution === transactionToDelete.account) {\n        if (transactionToDelete.type === 'income') {\n          cashAccount.accountBalance = parseInt(cashAccount.accountBalance) - parseInt(transactionToDelete.amount);\n          setCashAccounts(cashAccounts.slice());\n        } else {\n          cashAccount.accountBalance = parseInt(cashAccount.accountBalance) + parseInt(transactionToDelete.amount);\n          setCashAccounts(cashAccounts.slice());\n        }\n      }\n    })\n\n    creditAccounts.forEach(creditAccount => {\n      if (creditAccount.institution === transactionToDelete.account) {\n        if (transactionToDelete.type === 'income') {\n          creditAccount.accountBalance = parseInt(creditAccount.accountBalance) - parseInt(transactionToDelete.amount);\n          setCreditAccounts(creditAccounts.slice());\n        } else {\n          creditAccount.accountBalance = parseInt(creditAccount.accountBalance) + parseInt(transactionToDelete.amount);\n          setCreditAccounts(creditAccounts.slice());\n        }\n      }\n    })\n\n    bankAccounts.forEach(bankAccount => {\n      if (bankAccount.institution === transactionToDelete.account) {\n        if (transactionToDelete.type === 'income') {\n          bankAccount.accountBalance = parseInt(bankAccount.accountBalance) - parseInt(transactionToDelete.amount);\n          setBankAccounts(bankAccounts.slice());\n        } else {\n          bankAccount.accountBalance = parseInt(bankAccount.accountBalance) + parseInt(transactionToDelete.amount);\n          setBankAccounts(bankAccounts.slice());\n        }\n      }\n    })\n    \n    // const newTransactions = transactions.filter(transaction => transaction.id !== id)\n    // localStorage.setItem('ExtraAppTransactions', JSON.stringify(newTransactions));\n    setTransactions(newTransactions)\n  }\n\n  const getAccounts = () => {\n    const cashAccounts = JSON.parse(localStorage.getItem('ExtraAppCashAccounts') || JSON.stringify([]))\n    const creditAccounts = JSON.parse(localStorage.getItem('ExtraAppCreditAccounts') || JSON.stringify([]))\n    const bankAccounts = JSON.parse(localStorage.getItem('ExtraAppBankAccounts') || JSON.stringify([]))\n    return [...cashAccounts, ...creditAccounts, ...bankAccounts];\n  }\n  \n  return (\n    <div>\n      <h2>Transactions</h2>\n      <form onSubmit={e => handleSubmit(e)}>\n        <select required defaultValue='' name=\"category\" onChange={e => setCategory(e.target.value)}>\n          <option disabled value=\"\">Category</option>\n          <option value=\"groceries\">Groceries</option>\n          <option value=\"income\">Income</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"utilities\">Utilities</option>\n          <option value=\"entertainment\">Entertainment</option>\n          <option value=\"other\">Other</option>\n        </select>\n        <input required type=\"number\" min='0' step='0.01' value={amount} placeholder=\"amount\" onChange={e => setAmount(e.target.value)} />\n        <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n        <select required defaultValue='' name=\"account\" onChange={e => setAccount(e.target.value)}>\n          <option disabled value=\"\">Choose an account</option>\n          {\n            getAccounts().map((account, i) => {\n              return (\n                <option key={i} value={`${account.institution}`}>{account.institution}</option>\n              )\n            })\n          }\n        </select>\n        <select required defaultValue='' name=\"type\" onChange={e => setType(e.target.value)}>\n          <option disabled value=\"\">Select entry type</option>\n          <option value=\"expense\">Expense</option>\n          <option value=\"income\">Income</option>\n        </select>\n        <input required type=\"text\" value={description} placeholder='Add a description...' onChange={e => setDescription(e.target.value)} />\n        <input type=\"submit\" value=\"Add Transaction\" />\n      </form>\n      <table>\n        <thead>\n          <tr>\n            <th className='category-header' onClick={e => sortCategory(e)}>Category</th>\n            <th className='amount-header' onClick={e => sortAmount(e)}>Amount</th>\n            <th className='date-header' onClick={e => sortDate(e)}>Date</th>\n            <th>Description</th>\n            <th>Options</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            transactions.map(transaction => <TransactionItem key={transaction.id} transaction={transaction} handleDelete={handleDelete} />)\n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Pie } from 'react-chartjs-2';\n\nexport const DailyReports = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n\n    return `${year}-${month}-${day}`\n  }\n\n  const formatNumber = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const totalExpenses = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    transactions.forEach(transaction => {\n      if (transaction.date === date && transaction.type === \"expense\") {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return formatNumber(total.toFixed(2));\n  }\n\n  const dailyBreakdown = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    const categories = ['Groceries', 'Personal', 'Utilities', 'Entertainment', 'Other'];\n    const breakdown = [];\n    categories.forEach(category => {\n      let total = 0;\n      transactions.forEach(transaction => {\n        if (transaction.category === category.toLowerCase() && transaction.date === date && transaction.type === 'expense') {\n          total += parseFloat(transaction.amount);\n        }\n      })\n      breakdown.push(total.toFixed(2));\n    })\n\n    return breakdown;\n  }\n\n  const [date, setDate] = useState(todaysDate);\n  const data = {\n    labels: ['Groceries', 'Personal', 'Utilities', 'Entertainment', 'Other'],\n    datasets: [\n      {\n        label: 'Rainfall',\n        backgroundColor: [\n          '#B21F00',\n          '#C9DE00',\n          '#2FDE00',\n          '#00A6B4',\n          '#6800B4'\n        ],\n        hoverBackgroundColor: [\n          '#501800',\n          '#4B5000',\n          '#175000',\n          '#003350',\n          '#35014F'\n        ],\n        data: dailyBreakdown()\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n      <span>${totalExpenses()}</span>\n      <div className='pie-chart-container'>\n        {\n          data.datasets[0].data.every(amount => amount === '0.00') ? \n          <span className='empty-pie-message'>You have no expenses for the selected day</span> : null\n        }\n        <Pie\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: 'Daily Expense Breakdown',\n              fontSize: 30\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { DailyReports } from './DailyReports';\n\nexport const Reports = () => {\n  const formatNumber = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n    <div>\n      <div>\n        <NavLink activeClassName='reports-nav-active' exact to='/report/daily'>Daily</NavLink>\n        <NavLink activeClassName='reports-nav-active' exact to='/report/week'>Week</NavLink>\n        <NavLink activeClassName='reports-nav-active' exact to='/report/month'>Month</NavLink>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport moment from 'moment';\nimport { Line } from 'react-chartjs-2';\n\nexport const WeeklyReports = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n\n    return `${year}-${month}-${day}`\n  }\n\n  const getWeek = () => {\n    let dayOfWeek = (new Date(`${date}T00:00:00.000-07:00`)).getDay();\n    const week = [];\n    const referenceDate = moment(date, \"YYYY-MM-DD\") \n    let day;\n    while (week.length < 7) {\n      if (dayOfWeek > 0) {\n        day = referenceDate.clone().subtract(dayOfWeek, 'days').format(\"YYYY-MM-DD\");\n        day.split('/').join('-');\n        week.push(day);\n      } else if (dayOfWeek < 0) {\n        day = referenceDate.clone().add(Math.abs(dayOfWeek), 'days').format(\"YYYY-MM-DD\");\n        day.split('/').join('-');\n        week.push(day);\n      } else {\n        week.push(date);\n      }\n      dayOfWeek--;\n    }\n\n    return week;\n  }\n\n  const formatNumber = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const totalExpenses = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    const week = getWeek();\n    transactions.forEach(transaction => {\n      if (week.includes(transaction.date)) {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return formatNumber(total.toFixed(2));\n  }\n\n  const populateData = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    const data = [];\n    const week = getWeek();\n    week.forEach(day => {\n      let expenseForDay = 0;\n      transactions.forEach(transaction => {\n        if (transaction.date === day) {\n          expenseForDay += parseFloat(transaction.amount);\n        }\n      })\n      data.push(expenseForDay.toFixed(2));\n    })\n\n    return data;\n  }\n\n  const [date, setDate] = useState(todaysDate);\n\n  const data = {\n    labels: getWeek(),\n    datasets: [\n      {\n        label: 'Weekly Expenses',\n        fill: true,\n        lineTension: 0.2,\n        backgroundColor: 'rgba(12, 238, 99, 1)',\n        borderColor: 'rgba(0, 0, 0, 1)',\n        borderWidth: 2,\n        data: populateData()\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n      <span>${totalExpenses()}</span>\n      <div className='line-graph-container'>\n        <Line\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: `Weekly Expense Breakdown`,\n              fontSize: 30\n            },\n            legend: {\n              display: false,\n            }, \n            // maintainAspectRatio: false,\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Line } from 'react-chartjs-2';\n\nexport const MonthlyReports = () => {\n  const todaysDate = () => {\n    let [month, day, year] = new Date().toLocaleDateString().split('/');\n    if (month.length === 1) {\n      month = `0${month}`\n    }\n\n    if (day.length === 1) {\n      month = `0${day}`\n    }\n\n    return `${year}-${month}-${day}`\n  }\n\n  const totalExpenses = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    let total = 0;\n    transactions.forEach(transaction => {\n      const transactionMonth = transaction.date.slice(5, 7);\n      const transactionYear = transaction.date.slice(0, 4);\n      \n      if (transactionMonth === date.slice(5, 7) && transactionYear === date.slice(0, 4) && transaction.type === 'expense') {\n        total += parseFloat(transaction.amount);\n      }\n    })\n\n    return formatNumber(total.toFixed(2));\n  }\n\n  const getMonth = () => {\n    const numDays = new Date(date.slice(0, 4), date.slice(5,7), 0).getDate();\n    const monthDays = [];\n    for (let i = 1; i <= numDays; i++) {\n      if (i.toString().length < 2) {\n        monthDays.push(`${date.slice(0, 4)}-${date.slice(5, 7)}-0${i}`)\n      } else {\n        monthDays.push(`${date.slice(0, 4)}-${date.slice(5, 7)}-${i}`)\n      }\n    }\n\n    return monthDays;\n  }\n\n  const populateData = () => {\n    const transactions = JSON.parse(localStorage.getItem('ExtraAppTransactions') || JSON.stringify([]))\n    const data = [];\n    const month = getMonth();\n    month.forEach(day => {\n      let expenseForDay = 0;\n      transactions.forEach(transaction => {\n        if (transaction.date === day) {\n          expenseForDay += parseFloat(transaction.amount);\n        }\n      })\n      data.push(expenseForDay.toFixed(2));\n    })\n\n    return data;\n  }\n\n  const formatNumber = (num) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  const [date, setDate] = useState(todaysDate);\n  const data = {\n    labels: getMonth(),\n    datasets: [\n      {\n        label: 'Monthly Expenses',\n        fill: true,\n        lineTension: 0.2,\n        backgroundColor: 'rgba(12, 238, 99, 1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: populateData()\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <input type=\"date\" value={date} onChange={e => setDate(e.target.value)} />\n      <span>${totalExpenses()}</span>\n      {/* {\n        getMonth().map((month, i) => <div key={i}>{month}</div>)\n      } */}\n      <div className='line-graph-container'>\n        <Line\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: `Monthly Expense Breakdown`,\n              fontSize: 30\n            },\n            legend: {\n              display: false,\n            }\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Navbar } from './components/Navbar';\nimport { Route, HashRouter } from 'react-router-dom';\nimport './stylesheets/App.css';\nimport './stylesheets/reset.css';\nimport './stylesheets/summary.css';\nimport './stylesheets/transactions.css';\nimport { Summary } from './components/Summary';\nimport { Transactions } from './components/Transactions';\nimport { Reports } from './components/reports/Reports';\nimport { DailyReports } from './components/reports/DailyReports';\nimport { WeeklyReports } from './components/reports/WeeklyReports';\nimport { MonthlyReports } from './components/reports/MonthlyReports';\n\nfunction App() {\n  return (\n      <HashRouter>\n        <div>\n          <Navbar />\n          <Route path='/summary' component={Summary} />\n          <Route path='/transactions' component={Transactions} />\n          <Route path='/report' component={Reports} />\n          <Route path='/report/daily' component={DailyReports} />\n          <Route path='/report/week' component={WeeklyReports} />\n          <Route path='/report/month' component={MonthlyReports} />\n        </div>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}